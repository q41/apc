package bp bp "http://www.emftext.org/language/ballandpaddle" {
		
	class Root {
		containment reference Level level (1..1);
		containment reference Paddle paddles (1..-1);
		containment reference Ball balls (1..-1);
		containment reference Block blocks (0..-1);
		containment reference Effect effects (0..-1);
		containment reference Power powers (0..-1);		
	}

	class Level{
		attribute EString id (1..1);
		attribute EFloat powerSpawnChance (0..1);
		attribute EString blocks (0..-1);		
	}
	
	abstract class BAPObject{
		attribute EString id (1..1);
	}
	
	class Paddle extends BAPObject{				
		attribute EDouble x (1..1);
		attribute EDouble y (1..1);	
		attribute EInt size (1..1);
		attribute EInt orientation (1..1);		
	}
	
	class Ball extends BAPObject{				
		attribute EDouble x (1..1);
		attribute EDouble y (1..1);	
		attribute EInt size (0..1);
		attribute EInt direction (0..1);
		attribute EInt damage (0..1);
		attribute EInt speed (0..1);
	}
	
	class Block extends BAPObject{
		attribute EInt hardness (1..1);
		attribute EInt resistance (0..1);
		reference Power power (0..1);
	}
	
	class Power{
		attribute EString id (1..1);
		reference Effect effects (1..-1);
		attribute EFloat powerSpawnChance (0..1);
	}
	
	abstract class Target{
		containment reference BooleanExpression filter (0..1);
	}
	
	class ObjectTarget extends Target{
		reference BAPObject item (1..1);
	}
	
	class TypeTarget extends Target{
		attribute TargetType type (1..1);
	}
	
	abstract class BooleanExpression{}
	
	abstract class BooleanBinaryExpression extends BooleanExpression{
		containment reference BooleanExpression left (1..1);
		containment reference BooleanExpression right (1..1);
	}
	
	abstract class BooleanUnaryExpression extends BooleanExpression{
		containment reference BooleanExpression body (1..1);
	}
	
	class EqParameter extends BooleanBinaryExpression{
	}
	
	class SmthParameter extends BooleanBinaryExpression{
	}
	
	class SeqParameter extends BooleanBinaryExpression{
	}
	
	class LthParameter extends BooleanBinaryExpression{
	}
	
	class LeqParameter extends BooleanBinaryExpression{
	}
	
	class NeqParameter extends BooleanBinaryExpression{
	}
	
	class OrParameter extends BooleanBinaryExpression{
	}
	
	class AndParameter extends BooleanBinaryExpression{
	}
	
	class BracketParameter extends BooleanUnaryExpression{}
	
	class NegParameter extends BooleanUnaryExpression{}
	
	class AttParameter extends BooleanExpression{
		attribute Attribute att (1..1);
	}
	
	class IntValueParameter extends BooleanExpression{
		attribute EInt value(1..1);		
	}
	
	class DoubleValueParameter extends BooleanExpression{
		attribute EDouble value(1..1);		
	}
	
	abstract class Effect{
		attribute EString id (1..1);
		containment reference AttributeAdjustment body (1..1);
	}
	
	class GeneralEffect extends Effect{
		containment reference Target target (1..1);		
	}
	
	class CollisionEffect extends Effect{
		containment reference Target leftTarget (1..1);
		containment reference Target rightTarget (1..1);
	}
	
	class AttributeAdjustment{
		containment reference EffectedAttribute effectedAttribute (1..1);		
		attribute AdjustmentOperator adjustmentOperator(1..1);
		containment reference Expression expression (1..1);
		attribute EInt duration(0..1);
	}
	
	abstract class EffectedAttribute{
	}
	
	class EffectedBallAttribute extends EffectedAttribute{
		attribute Attribute type (1..1);	
	}
	
	class EffectedPaddleAttribute extends EffectedAttribute{
		attribute Attribute type (1..1);	
	}
	
	class EffectedBlockAttribute extends EffectedAttribute{
		attribute Attribute type (1..1);	
	}
	
	abstract class Expression{	
	}
	
	abstract class BinaryExpression extends Expression{
		containment reference Expression left(1..1);
		containment reference Expression right(1..1);
	}
	
	abstract class UnaryExpression extends Expression{
		containment reference Expression body(1..1);
	}
	
	class MultExpression extends BinaryExpression{
	}
	
	class DivExpression extends BinaryExpression {
	}
	
	class PlusExpression extends BinaryExpression{
	}
	
	class MinusExpression extends BinaryExpression{
	}
	
	class BracketExpression extends UnaryExpression{				
	}
	
	class NegExpression extends UnaryExpression{			
	}
	
	class IntOperand extends Expression{
		attribute EInt value (1..1);	
	}
	
	class DoubleOperand extends Expression{
		attribute EDouble value (1..1);		
	}
	class BoolOperand extends Expression{
		attribute EBoolean value (1..1);
	}
	
	class AttBallOperand extends Expression{	
		attribute Attribute att(1..1);				
	}
	
	class AttBlockOperand extends Expression{	
		attribute Attribute att(1..1);				
	}
	
	class AttPaddleOperand extends Expression{	
		attribute Attribute att(1..1);				
	}
	
	serializable enum Attribute{
		1 : Size = "size";
		2 : Orientation = "orientation";
		3 : Speed = "speed";
		4 : Hardness = "hardness";
		5 : NormalRes = "resistance";
		6 : NormalDam = "damage";
		7 : Immaterial = "immaterial";
	}
	
	serializable enum TargetType{		
		0 : Block = "block";
		1 : Paddle = "paddle";
		2 : Ball = "ball";
	}
	
	serializable enum AdjustmentOperator{
		0 : Inc = "+=";
		1 : Dec = "-=";
		2 : Set = "=";	
	}
		
}